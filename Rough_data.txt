// TODO:

1. LOG_PIPELINE : DONE
--- done start ----
Kafka integration = for log pipeline, analytics storage

Log collection pipeline (aiven : redis) - for reducing my workload, i wont make a log pipeline, i will see if any error message is there. - if error occur then i will store that in that Deployment itself and when user is polling and will show that error there - otherwise if deployment success, user dont have any problem ig.

Or I am somehow trying, not to store logs and just stream them, or can I poll, I am not sure
or can i simply take logs from that task ??

ecs/task-vercel-image/34190ed6f407446494a3db2ec2522cfa :: no logs for older events

// to list log groups
aws logs describe-log-groups

// to list log streams
aws logs describe-log-streams --log-group-name "/ecs/builder-task"

// to list logs
// I need taskId only
aws logs get-log-events --log-group-name "/ecs/builder-task" --log-stream-name "ecs/task-vercel-image/7dbbcc94230441979f06f1baf1da73fb" --limit 100

--- done end ----

2. check what all to be changed while updating AWS client : DONE
3. deployment status update
    :: For this, I can log some states in container in format STATE=XYZ and poll getEvents and check latest state
    :: But okay, can be prioritized later

4. add react build folder ka support => done
    :: added, need to test => done
5. custom and random projectId handle : Not Priority -----
6. How env vars, that the gir repo project needs, will be populated : done
7. FrontEnd for API server and then host API server and proxy on an instance

------------------------------------------

sample event recieved from cloudWatch
{
    "eventId": "38533232213210717101170070492538101647103794672943824898",
    "ingestionTime": 1727889894943,
    "message": "computing gzip size...",
    "timestamp": 1727889892027
}

--------------------------------------------
USEFUL Docker Commands :-

docker run -it --rm vercel-image /bin/bash

docker run -d --restart=always bbd03522a467

docker run -it ubuntu:focal

docker rmi $(docker images -q) -f

#containers remove
docker rm -f $(docker ps -a -q)

#remove images

sample image : https://github.com/Sahil-D/vite-sample

--------------------------------------------

Prisma Migration

delete migration query which is idle at aiven

npx prisma migrate dev --name remove-uuid-default-from-deployment-id

or
npx prisma db execute --file /path/to/your/migration.sql

--------------------------------------------

map projectId => it index.html from s3
API server => Proxy server => S3
